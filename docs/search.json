[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Andrew Setiono, S. Psi, M. Si",
    "section": "",
    "text": "Andrew Setiono, S. Psi, M. Si\nI am a recent graduate from the Research Master program at the Faculty of Behavioral and Social Sciences, University of Groningen.\n\n\n\n\nPassionate about understanding and solving complex organizational phenomena, I specialize in advanced statistical methods with a focus on multilevel modeling.\n\n\nMy research interests span topics such as hybrid work, workplace aging, and the influence of family-supportive leadership."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Andrew’s Blog",
    "section": "",
    "text": "Mapping Indonesia Workforce’s Age Group using BPS API\n\n\n\nTutorial\n\n\n\nAn interactive plot to visualize the state of workforce in Indonesia based on age using BPS API\n\n\n\n\n\n\nJul 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\nBetter Approaches to Performance Monitoring\n\n\n\nI/O Psych\n\nEssay\n\n\n\nEmployee performance monitoring can crucial in talent retention and productivity maintenance—especially with a disengaged workforce—but they are often intrusive and…\n\n\n\n\n\n\nJun 3, 2023\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2023-06-post1/index.html",
    "href": "posts/2023-06-post1/index.html",
    "title": "Better Approaches to Performance Monitoring",
    "section": "",
    "text": "As employers of a global company, the ‘great resignation’ and ‘quiet quitting’ have become the forefront of workplace issues that warrants concern. A recent survey from McKinsey reported that 40% of the global workforce is somewhat likely to leave their current jobs (De Smet et al., 2021). Another report from Gallup (2022) revealed that only 21% of global workers are engaged at work. The same report also showed that nearly 5 out of 10 workers experience worry and stress daily at work. These reports presented the challenging landscape of retaining talents and maintaining their engagement.\nTo thrive against these challenging work trends as a global company, an effective employee performance monitoring may prove to be essential. Employee performance monitoring entails various workplace practices that allow the collection of performance data from employees (Stanton, 2000). Such performance data may allow employers to identify which employees display high performance and should be retained. Furthermore, it may reveal which employees are showing signs of disengagement. Recently, these practices have been rapidly developing—from traditional to electronic performance monitoring—due to digital transformation within companies and the pandemic. Stanton (2000) highlighted that electronic monitoring differs from traditional monitoring, especially in its ability to collect performance data; electronic monitoring allows continuous monitoring of multiple dimensions of work performance, whereas traditional monitoring requires the presence of human observers. Furthermore, electronic has an obvious advantage of remote monitoring which aids employers during the pandemic.\nDespite its apparent advantages, employees are pushing back against intrusive and demanding performance monitoring (Kantor et al., 2022). oday, both white- and blue-collar workers are dealing with monitoring software that invades their privacy (e.g., software that takes photos at multiple random times a day) and interferes with their focus (e.g., “idle” buttons). Furthermore, they are dealing with micro-managing leaders who demand multiple, but often unnecessary, status reports. Moreover, these practices have been taken to the extent that employees are unable to do essential offline work (e.g., deep thinking, reading printouts, talking to customers) or breaks (e.g., bathroom breaks) without receiving a reprimand from the software or their leaders (e.g., through constant check-in, notifications, or emails).\nThis trend of employees’ pushback indicates the mounting pressure to maintain productivity among employers. However, it also revealed that employers are unaware of how employees would react to monitoring system features. Therefore, understanding the underlying psychological process employees experience under performance monitoring would likely result in a competitive advantage over other companies. Furthermore, such understanding would allow for designing an effective monitoring system.\nResearch in organizational psychology may provide a framework and insights to move forward. Specifically, adapting Carayon’s (1993) framework, employee performance monitoring is proposed to influence employee well-being through job design. Job designs are further divided into three key components: (1) job demand, (2) job control, and (3) social support. In the following paragraphs, these components will be extended to gain a deeper understanding employees’ psychological process."
  },
  {
    "objectID": "posts/2023-06-post1/index.html#performance-monitoring-and-job-demand",
    "href": "posts/2023-06-post1/index.html#performance-monitoring-and-job-demand",
    "title": "Better Approaches to Performance Monitoring",
    "section": "Performance monitoring and job demand",
    "text": "Performance monitoring and job demand\nCarayon’s (1993) framework proposed that performance monitoring could affect the level of stress that employees experience through its influence on job demand. Employees reported that monitoring software often tracks their mouse movements and keyboard clicks, which forces them to be constantly working or active, or else they would be marked with inactivity (Kantor et al., 2022). This is an example of real-time performance tracker that characterizes current performance monitoring. Under constant pressure, employees may perceive an increase in their job demands (i.e., high time pressure and workload), thus increasing stress. Indeed, the pressure to be constantly “on” can be seen as a form of task-related job stressor (Sonnentag & Frese, 2012, p. 562), which could reduce employee well-being (Green, 2004).\nFurthermore, the constant pressure that performance monitoring imposes on employees may prevent them from recovering and potentially prolong their stress responses which would be harmful in the long run. According to DiStaso and Shoss (2020), employees need to perceive an “end” state of their current workload (e.g., employees only need to clock in for 40 hours of work per week, project timelines indicating when it would be finished). They found that anticipating a workload decrease would help employees buffer against the negative effect of workload stressors. However, the typical characteristic of performance monitoring that interferes with “idle” times (e.g., bathroom breaks, talking to family or colleagues) may prevent employees from seeing the proverbial “light at the end of the tunnel.” Thus, exacerbating the negative effect of the workload."
  },
  {
    "objectID": "posts/2023-06-post1/index.html#performance-monitoring-and-control",
    "href": "posts/2023-06-post1/index.html#performance-monitoring-and-control",
    "title": "Better Approaches to Performance Monitoring",
    "section": "Performance monitoring and control",
    "text": "Performance monitoring and control\nAnother important factor that is influenced by performance monitoring is employees’ enactment of control at work. Drawing from Kotabe and Hofmann (2015) Integrative Self-Control Theory (ISCT), we conclude that there are three possible avenues of performance monitoring effect on employee behavioral enactment: (1) control motivation, (2) control capacity, and (3) enactment constraints.\nThe first avenue, control motivation, is defined as the personal “aspiration to control desire” (Kotabe & Hofmann, 2015, p. 624). Lian et al. (2017) noted that individuals are motivated to engage in self-control at work based on its expected consequences. Control motivation is then closely related to performance monitoring. Performance monitoring communicates which behaviors are rewarded (or punished), allowing employees to evaluate the value and consequence of their behaviors.\nThe second avenue, control capacity, pertains to individuals’ resources that enable them to override desire (Kotabe & Hofmann, 2015). It was found to be closely linked with executive functions and relied on direct attention—a depletable and restorable resource (Kaplan & Berman, 2010). Performance monitoring has the potential to redirect or deplete attention. In the former case, performance monitoring may direct employees’ attention to work dimensions that need further improvement, thus helping them refocus self-control effort to enhance task performance. In the latter case, intrusive performance monitoring can potentially distract employees from focusing on work or essential tasks. Jeske and Santuzzi (2015) found that close performance monitoring reduce employees perceived control. Furthermore, performance monitoring only directs attention to those tasks that are being monitored, thus depleting resources from other tasks (Ravid et al., 2020).\nThe last avenue, enactment constraint, represents the contextual factors that restrict behavioral options (Kotabe & Hofmann, 2015). This contextual restriction is related to Carayon’s (1993) idea of job control as the mediator between performance monitoring and stress. Specifically, Carayon (1993) argued that some features of performance monitoring might influence the level of control that employees have over their pace of work (i.e., instrumental control) or how tasks are executed and expected (i.e., conceptual control). Indeed, we saw that intrusive performance monitoring could make employees feel dictated. For instance, Kantor et al. (2022) reported how performance monitoring software dictates hospice chaplains’ relationships with the dying; they sometimes have to change the nature of their relationships (e.g., shifted time and quality of relationship) to meet the standard determined by the software."
  },
  {
    "objectID": "posts/2023-06-post1/index.html#performance-monitoring-and-social-support",
    "href": "posts/2023-06-post1/index.html#performance-monitoring-and-social-support",
    "title": "Better Approaches to Performance Monitoring",
    "section": "Performance Monitoring and Social Support",
    "text": "Performance Monitoring and Social Support\nSocial support is the last component of job design that mediates the effect of performance monitoring (Carayon, 1993). Carayon (1993) argued that specific characteristics of the performance monitoring system might change the nature of social support employees receive from supervisors. Anecdotal examples of managers who immediately notify their workers after brief “Away” periods or constantly ask for progress updates from their subordinates (Tatum, 2022), are indicative of the changes in the nature of leader’s support. These changes may happen because performance monitoring systems shape how leaders and their subordinates construe their power (Sewell et al., 2012). The availability of an intrusive monitoring system may possibly obscure the leader’s sense of social connection to their employees since leaders primarily interact with their employees through the performance metric. This severing of social connection thus reduces the social support that leaders provide to their subordinates, leaving them with increasing work pressure but low support."
  },
  {
    "objectID": "posts/2023-06-post1/index.html#design-monitoring-systems-that-allows-recovery",
    "href": "posts/2023-06-post1/index.html#design-monitoring-systems-that-allows-recovery",
    "title": "Better Approaches to Performance Monitoring",
    "section": "Design Monitoring Systems that Allows Recovery",
    "text": "Design Monitoring Systems that Allows Recovery\nAs discussed, the monitoring system can increase employee stress because it increases job demand and has the potential to reduce control capacity from essential tasks. One way to reduce these adverse effects is to avoid constant monitoring and embed recovery time or break into the monitoring system. Short breaks allow employees to replenish control capacity (Lian et al., 2017). Furthermore, it is vital that the system not only allows for recovery but also promotes awareness for employees that they will have recovery. Anticipation of a workload decrease (i.e., availability of recovery time) may buffer employees from experiencing negative emotions in the current high workload condition (DiStaso & Shoss, 2020).\nEmbedding recovery times to the monitoring system can be done by allowing “idle” time that is considered reasonable for taking breaks. For example, Amazon has relaxed its performance monitoring regulations by dropping off the term “time off task” and instructing their managers to only look for “idle” periods longer than 15 minutes. Moreover, the monitoring system can be designed to stop when certain conditions are met, therefore creating the anticipation of a decrease in workload. For instance, instead of designing a monitoring system that continuously tracks mouse activities, employers may opt for a monitoring system that can be turned off after certain working hours or goals are met."
  },
  {
    "objectID": "posts/2023-06-post1/index.html#involve-employees-while-designing-monitoring-system",
    "href": "posts/2023-06-post1/index.html#involve-employees-while-designing-monitoring-system",
    "title": "Better Approaches to Performance Monitoring",
    "section": "Involve Employees while Designing Monitoring System",
    "text": "Involve Employees while Designing Monitoring System\nIntensive monitoring system can sometimes be perceived as “demoralizing” and not accurately reflect the nature of work that employees are going through (Kantor et al., 2022). These reports might be indicative that monitoring system are often designed with the purpose of surveillance and punishment. In other words, the system is designed without a rationale beyond collecting employee information or without employees interest of pursuing their work goals. These may create perceptions of low control among employees and increase work pressure and stress. Instead of leaving out employees from the design process, creating opportunities for discussion and providing legitimate justification as to why the monitoring should exist may be more useful.\nWithin the discussion process, employees may provide information about which tasks should be considered as important to be monitored. Furthermore, employees can provide ideas as to how their performance should ideally be monitored. By giving opportunities for discussing the monitoring process, employees perceive that they have some level of control toward their job, thus increasing job control. Additionally, employee should be provided with justification for the monitoring system. Justification of system tend to produce positive response, such as greater feelings of justice, in those being monitored (Ravid et al., 2020)."
  },
  {
    "objectID": "posts/2023-06-post1/index.html#empower-leaders-to-be-responsible-to-others",
    "href": "posts/2023-06-post1/index.html#empower-leaders-to-be-responsible-to-others",
    "title": "Better Approaches to Performance Monitoring",
    "section": "Empower Leaders to be Responsible to Others",
    "text": "Empower Leaders to be Responsible to Others\nLeaders hold a strategic position in a performance monitoring system as they hold the power to manage and discipline their subordinates (Sewell et al., 2012). However, as discussed above, one must be cautious about how the performance monitoring system influences a leader’s construal of their power. An intrusive monitoring system may reduce social connections, thus severing the relational aspect of power. Tost and Johnson (2019) argued that leaders who failed to construe the relational aspect of power would refrain from investing their resources to benefit members of the group. Consequently, it is important to influence leaders to construe their power as a responsibility to be stewards of their subordinates.\nOne way to change a leader’s power construal is to introduce, develop, or strengthen benevolent power norms and dependency awareness. Tost and Johnson (2019) found that benevolent power norms mediated the relationship between structural power and responsibility. Benevolent power norms may inform leaders of the expectation that they should use performance monitoring (i.e., a form of structural power) to benefit the interests of employees. Furthermore, leaders should be made aware that their subordinates are also dependent on leaders’ access to performance monitoring to evaluate their performances and determine ways to enhance them."
  },
  {
    "objectID": "posts/2025-07-post1/index.html",
    "href": "posts/2025-07-post1/index.html",
    "title": "Mapping Indonesia Workforce’s Age Group using BPS API",
    "section": "",
    "text": "Why this post?\nI want to create an interactive plot to visualize the state of workforce in Indonesia based on age using BPS API. The goal is to provide a clear and informative visualization that allows users to explore the data and understand the trends in the workforce by age group. In this post, I will walk you through the process of retrieving the data from the BPS API, parsing the response, and creating an interactive plot using ggplot2 and plotly.\nAn easily accessible and interactive visualization of the workforce data can help researchers, policymakers, and the general public to better understand the trends and patterns in the workforce by age group. This can lead to more informed decisions and policies that address the needs of the aging workforce in Indonesia.\nI am primarily inspired by the Eurostat homepage which allows researchers to track data about the aging workforce.\n\n\nLibraries\nFirst, let’s load the necessary libraries to work with the BPS API and manipulate the data. We will use httr2 for making API requests and tidyverse for data manipulation and visualization.\n\nlibrary(httr2)\nlibrary(tidyverse)\n\nWarning: package 'ggplot2' was built under R version 4.4.3\n\n\nWarning: package 'purrr' was built under R version 4.4.3\n\n\n\n\nThe BPS API\nThe BPS API provides access to various datasets from the Badan Pusat Statistik (BPS) Indonesia (Bureau of Statistics Indonesia). To use the API, you need an API key, which you can obtain by registering on the BPS website.\nFirst, login to your BPS account, fill out your profile details, and create an application in the “Application”. The API key is stored in the “App ID” column. Once you have the key, you can set it as an environment variable in your R session or in your .Renviron file. Read the BPS API Documentation for more details on how to use it.\nOnce you are ready with your API key, you can start making requests to the BPS API. The base URL for the API is https://webapi.bps.go.id/v1/api/list, and you can specify various parameters to filter the data you want to retrieve.\n\napi_key &lt;- Sys.getenv(\"BPS_API_KEY\")\nbase_url &lt;- \"https://webapi.bps.go.id/v1/api/list\"\n\nThere are a few parameters that you can use to filter the data, such as model, lang, domain, var, and th. Unfortunately, the BPS API documentation does not provide a detailed explanation of these parameters, so you will need to experiment with them to find the data you are looking for.\nOne way to explore the available data is to find the data you want to retrieve using the BPS website, and inspect the JSON response in the browser’s developer tools. This will give you an idea of the structure of the data and the parameters you need for your API request.\nFor example, I want to extract the data for the “Angkatan kerja menurut golongan umur” (Workforce by Age Group) for the year 2025. In the webpage, click on the &lt;/&gt; JSON button to view the endpoint API.\n\nFor example, the endpoint for the “Angkatan kerja menurut golongan umur” table is:\n“https://webapi.bps.go.id/v1/api/list/model/data/lang/ind/domain/0000/var/698/th/125/key/[WebAPI_KEY]”\n\n\n\n\n\n\nNote\n\n\n\nThe [WebAPI_KEY] part of the URL is a placeholder for your actual API key. You need to replace it with your own API key to make the request work.\n\n\nFrom this endpoint, we can modify our api request parameters using the req_url_path_append() function from the httr2 package. The parameters we will use are:\n\nmodel &lt;- \"data\" # model for \"Data\"\nlang &lt;- \"ind\" # language for \"Bahasa Indonesia\"\ndomain &lt;- \"0000\" # domain for \"Pusat\"\nvar &lt;- \"698\" # variable for table \"Angkatan kerja menurut golongan umur\"\nth &lt;- \"125\" # tahun 2025\n\napi_response &lt;- request(base_url) |&gt; \n  req_url_path_append(\n    \"model\", model,\n    \"lang\", lang,\n    \"domain\", domain,\n    \"var\", var,\n    \"th\", 125,\n    \"key\", api_key\n  ) |&gt; \n  req_perform()\n\nBelow is the response from the API request. The response is in JSON format, which we can parse to extract the data we need using resp_body_json() function.\n\napi_response_list &lt;- api_response |&gt; resp_body_json()\nglimpse(api_response_list)\n\nList of 12\n $ status           : chr \"OK\"\n $ data-availability: chr \"available\"\n $ last_update      : chr \"2025-06-25 10:04:27\"\n $ subject          :List of 1\n  ..$ :List of 2\n  .. ..$ val  : int 520\n  .. ..$ label: chr \"Tenaga Kerja\"\n $ var              :List of 1\n  ..$ :List of 7\n  .. ..$ val    : int 698\n  .. ..$ label  : chr \"Angkatan Kerja (AK) Menurut Golongan Umur\"\n  .. ..$ unit   : chr \"\"\n  .. ..$ subj   : chr \"Tenaga Kerja\"\n  .. ..$ def    : chr \"\"\n  .. ..$ decimal: int 2\n  .. ..$ note   : chr \"&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br \"| __truncated__\n $ turvar           :List of 4\n  ..$ :List of 2\n  .. ..$ val  : int 827\n  .. ..$ label: chr \"Bekerja\"\n  ..$ :List of 2\n  .. ..$ val  : int 828\n  .. ..$ label: chr \"Jumlah Pengangguran\"\n  ..$ :List of 2\n  .. ..$ val  : int 829\n  .. ..$ label: chr \"Jumlah AK\"\n  ..$ :List of 2\n  .. ..$ val  : int 830\n  .. ..$ label: chr \"% Bekerja / AK\"\n $ labelvervar      : chr \"Golongan Umur\"\n $ vervar           :List of 11\n  ..$ :List of 2\n  .. ..$ val  : int 1\n  .. ..$ label: chr \"15-19\"\n  ..$ :List of 2\n  .. ..$ val  : int 2\n  .. ..$ label: chr \"20-24\"\n  ..$ :List of 2\n  .. ..$ val  : int 3\n  .. ..$ label: chr \"25-29\"\n  ..$ :List of 2\n  .. ..$ val  : int 4\n  .. ..$ label: chr \"30-34\"\n  ..$ :List of 2\n  .. ..$ val  : int 5\n  .. ..$ label: chr \"35-39\"\n  ..$ :List of 2\n  .. ..$ val  : int 6\n  .. ..$ label: chr \"40-44\"\n  ..$ :List of 2\n  .. ..$ val  : int 7\n  .. ..$ label: chr \"45-49\"\n  ..$ :List of 2\n  .. ..$ val  : int 8\n  .. ..$ label: chr \"50-54\"\n  ..$ :List of 2\n  .. ..$ val  : int 9\n  .. ..$ label: chr \"55-59\"\n  ..$ :List of 2\n  .. ..$ val  : int 10\n  .. ..$ label: chr \"60+\"\n  ..$ :List of 2\n  .. ..$ val  : int 11\n  .. ..$ label: chr \"Total\"\n $ tahun            :List of 1\n  ..$ :List of 2\n  .. ..$ val  : int 125\n  .. ..$ label: chr \"2025\"\n $ turtahun         :List of 3\n  ..$ :List of 2\n  .. ..$ val  : int 189\n  .. ..$ label: chr \"Februari\"\n  ..$ :List of 2\n  .. ..$ val  : int 190\n  .. ..$ label: chr \"Agustus\"\n  ..$ :List of 2\n  .. ..$ val  : int 191\n  .. ..$ label: chr \"Tahunan\"\n $ datacontent      :List of 44\n  ..$ 7698827125189 : int 16164793\n  ..$ 2698828125189 : int 2527741\n  ..$ 4698828125189 : int 619800\n  ..$ 9698828125189 : int 262632\n  ..$ 7698829125189 : int 16450825\n  ..$ 3698828125189 : int 1319299\n  ..$ 4698830125189 : num 96.4\n  ..$ 6698828125189 : int 332935\n  ..$ 1698827125189 : int 4724711\n  ..$ 3698829125189 : int 17703447\n  ..$ 5698828125189 : int 351093\n  ..$ 11698830125189: num 95.2\n  ..$ 1698830125189 : num 82.2\n  ..$ 1698829125189 : int 5746898\n  ..$ 6698829125189 : int 17107389\n  ..$ 2698830125189 : num 84.4\n  ..$ 11698829125189: int 153049487\n  ..$ 1698828125189 : int 1022187\n  ..$ 8698829125189 : int 14323589\n  ..$ 11698827125189: int 145771180\n  ..$ 8698828125189 : int 242764\n  ..$ 5698827125189 : int 17177085\n  ..$ 2698829125189 : int 16224936\n  ..$ 11698828125189: int 7278307\n  ..$ 4698827125189 : int 16799939\n  ..$ 5698830125189 : int 98\n  ..$ 4698829125189 : int 17419739\n  ..$ 9698827125189 : int 11512218\n  ..$ 2698827125189 : int 13697195\n  ..$ 5698829125189 : int 17528178\n  ..$ 10698828125189: int 313824\n  ..$ 8698827125189 : int 14080825\n  ..$ 9698830125189 : num 97.8\n  ..$ 10698830125189: num 98.3\n  ..$ 7698830125189 : num 98.3\n  ..$ 7698828125189 : int 286032\n  ..$ 6698827125189 : int 16774454\n  ..$ 6698830125189 : num 98\n  ..$ 3698827125189 : int 16384148\n  ..$ 8698830125189 : num 98.3\n  ..$ 9698829125189 : int 11774850\n  ..$ 10698829125189: int 18769636\n  ..$ 10698827125189: int 18455812\n  ..$ 3698830125189 : num 92.5\n $ related          : list()\n\n\n\n\nParsing the API Response\nUpon a closer inspection, the key format of the API response appears to be a concatenation of several values, including vervar, var, turvar, tahun, and turtahun. For example, the key 7698827125189 can be broken down as follows:\n\nvervar: 7 -&gt; “45-49 tahun”\nvar: 698 -&gt; “Angkatan kerja menurut golongan umur”\nturvar: 827 -&gt; “Bekerja”\ntahun: 125 -&gt; year “2025”\nturtahun: 189 –&gt; month “February”\n\nTo help parse these keys, we can create a function that extracts these values based on their known positions and lengths. Note that the keys length may vary slightly between 13-14 characters as the vervar values can be of values 1-11, but the rest of the values are fixed in length. Thus, we can use the substr() function to extract the values based on their positions by counting from right to left:\n\nparse_key &lt;- function(key) {\n \n  vervar_val &lt;- substr(key, 1, nchar(key) - 12)\n  var_val &lt;- substr(key, nchar(key) - 11, nchar(key) - 9)\n  turvar_val &lt;- substr(key, nchar(key) - 8, nchar(key) - 6) \n  tahun_val &lt;- substr(key, nchar(key) - 5, nchar(key) - 3)\n  turtahun_val &lt;- substr(key, nchar(key) - 2, nchar(key))\n\n  return(\n    list(\n      vervar = vervar_val,\n      var = var_val,\n      turvar = turvar_val,\n      tahun = tahun_val,\n      turtahun = turtahun_val\n    )\n  )\n}\n\nLet’s try this function with example keys. As we can see, the function correctly returns a list with the parsed values for each key:\n\nkey_example &lt;- c(\"7698827125189\", \"10698829125189\")\nparsed_key &lt;- parse_key(key_example)\nparsed_key\n\n$vervar\n[1] \"7\"  \"10\"\n\n$var\n[1] \"698\" \"698\"\n\n$turvar\n[1] \"827\" \"829\"\n\n$tahun\n[1] \"125\" \"125\"\n\n$turtahun\n[1] \"189\" \"189\"\n\n\n\n\nLabel the parsed values\nNote that each value in the key corresponds to a specific label. We can create a named vector to map these values to their respective labels. For starters, let’s consider the vervar values, which represent age groups. The vervar is a list which contains 11 sub lists, each containing a value and a label. For example, the 15-19 age group has a value of 1 and a label of “15-19”.\n\napi_response_list$vervar\n\n[[1]]\n[[1]]$val\n[1] 1\n\n[[1]]$label\n[1] \"15-19\"\n\n\n[[2]]\n[[2]]$val\n[1] 2\n\n[[2]]$label\n[1] \"20-24\"\n\n\n[[3]]\n[[3]]$val\n[1] 3\n\n[[3]]$label\n[1] \"25-29\"\n\n\n[[4]]\n[[4]]$val\n[1] 4\n\n[[4]]$label\n[1] \"30-34\"\n\n\n[[5]]\n[[5]]$val\n[1] 5\n\n[[5]]$label\n[1] \"35-39\"\n\n\n[[6]]\n[[6]]$val\n[1] 6\n\n[[6]]$label\n[1] \"40-44\"\n\n\n[[7]]\n[[7]]$val\n[1] 7\n\n[[7]]$label\n[1] \"45-49\"\n\n\n[[8]]\n[[8]]$val\n[1] 8\n\n[[8]]$label\n[1] \"50-54\"\n\n\n[[9]]\n[[9]]$val\n[1] 9\n\n[[9]]$label\n[1] \"55-59\"\n\n\n[[10]]\n[[10]]$val\n[1] 10\n\n[[10]]$label\n[1] \"60+\"\n\n\n[[11]]\n[[11]]$val\n[1] 11\n\n[[11]]$label\n[1] \"Total\"\n\n\nWe can extract these values and labels from the API response and create a named vector for easy reference. We can use the map_df() and pull() function from the purrr package to iterate over the list and extract the values and labels:\n\nage_group &lt;- api_response_list$vervar |&gt; map_dfr(\\(x) x) |&gt; pull(label, val)\nemployment_status &lt;- api_response_list$turvar |&gt; map_dfr(\\(x) x) |&gt; pull(label, val)\ntime_category &lt;- api_response_list$turtahun |&gt; map_dfr(\\(x) x) |&gt; pull(label, val)\nyear &lt;- api_response_list$tahun |&gt; map_df(\\(x) x) |&gt; pull(label, val)\n\n# Sample\nage_group\n\n      1       2       3       4       5       6       7       8       9      10 \n\"15-19\" \"20-24\" \"25-29\" \"30-34\" \"35-39\" \"40-44\" \"45-49\" \"50-54\" \"55-59\"   \"60+\" \n     11 \n\"Total\" \n\n\nNext, we can extract the data content using enframe() to create a data frame with the values and their corresponding labels. The datacontent field contains the actual data values, which we can convert into a data frame.\n\ndatacontent &lt;- api_response_list$datacontent |&gt; \n  enframe(name = \"key\", value = \"value\")\n\nWe can then join the parsed values with the labels to create a complete data frame with all the necessary information. We will use mutate() to convert the key and value columns to character and double types, respectively, and then apply the parse_key() function to extract the parsed values.\n\ndatacontent_labeled &lt;- datacontent |&gt; \n  mutate(\n    key = as.character(key),\n    value = as.double(value),\n    parsed_key = map(key, parse_key)\n  ) |&gt; \n  unnest_wider(parsed_key) |&gt; \n  select(-c(\"key\", \"var\")) |&gt;  # removed unused column\n  mutate(\n    vervar = age_group[vervar],\n    turvar = employment_status[turvar],\n    turtahun = time_category[turtahun],\n    tahun = year[tahun]\n  ) |&gt; \n  rename(\n    age_group = vervar,\n    employment_status = turvar,\n    time_category = turtahun,\n    year = tahun\n  )\n\nWe can see the result is a nice table with the parsed values and their corresponding labels.\n\nhead(datacontent_labeled)\n\n# A tibble: 6 × 5\n     value age_group employment_status   year  time_category\n     &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;               &lt;chr&gt; &lt;chr&gt;        \n1 16164793 45-49     Bekerja             2025  Februari     \n2  2527741 20-24     Jumlah Pengangguran 2025  Februari     \n3   619800 30-34     Jumlah Pengangguran 2025  Februari     \n4   262632 55-59     Jumlah Pengangguran 2025  Februari     \n5 16450825 45-49     Jumlah AK           2025  Februari     \n6  1319299 25-29     Jumlah Pengangguran 2025  Februari     \n\n\nWe can further clean this data by assigning factors to the age groups and employment status for better visualization, and then reorder the columns to have a more logical order.\nI decided to filter the “% Bekerja / AK” from the employment_status column as it shows percentage of the workforce that is employed, which is a different unit of measurement compared to the other columns that show counts of individuals in each age group. Additionally, I filter the “Total” age group as it is not relevant for our analysis.\nFinally, we can select the relevant columns and ensure that the age_group column is ordered correctly for visualization purposes.\n\ndatacontent_cleaned &lt;- datacontent_labeled |&gt; \n  filter(\n    !employment_status %in% c(\"Jumlah AK\",\"% Bekerja / AK\"),\n    age_group != \"Total\",\n  ) |&gt;\n  mutate(\n    age_group = factor(age_group, levels = c(\n      \"15-19\", \"20-24\", \"25-29\", \"30-34\", \"35-39\", \n      \"40-44\", \"45-49\", \"50-54\", \"55-59\", \"60+\", \"Total\"\n    ), ordered = TRUE\n    ),\n    time_category = factor(time_category, levels = c(\n      \"Januari\", \"Februari\", \"Maret\", \"April\", \n      \"Mei\", \"Juni\", \"Juli\", \"Agustus\", \n      \"September\", \"Oktober\", \"November\", \"Desember\",\n      \"Tahunan\"\n    )),\n    employment_status = factor(employment_status, levels = c(\n      \"Bekerja\", \"Jumlah Pengangguran\", \"Jumlah AK\", \"% Bekerja / AK\"\n    )),\n  ) |&gt; \n  select(\n    year, time_category, employment_status, age_group, value\n  ) |&gt; \n  arrange(\n    year, time_category, employment_status, age_group\n  )\n\nWe can now view the cleaned data frame to see the final result.\n\n\n# A tibble: 10 × 5\n   year  time_category employment_status age_group    value\n   &lt;chr&gt; &lt;fct&gt;         &lt;fct&gt;             &lt;ord&gt;        &lt;dbl&gt;\n 1 2025  Februari      Bekerja           15-19      4724711\n 2 2025  Februari      Bekerja           20-24     13697195\n 3 2025  Februari      Bekerja           25-29     16384148\n 4 2025  Februari      Bekerja           30-34     16799939\n 5 2025  Februari      Bekerja           35-39     17177085\n 6 2025  Februari      Bekerja           40-44     16774454\n 7 2025  Februari      Bekerja           45-49     16164793\n 8 2025  Februari      Bekerja           50-54     14080825\n 9 2025  Februari      Bekerja           55-59     11512218\n10 2025  Februari      Bekerja           60+       18455812\n\n\n\n\nVisualizing the Data\nNow that we have the cleaned data, we can create an interactive plot to visualize the workforce by age group and employment status. We will use ggplot2 for the initial plot. We use the scales::comma() function to format the y-axis labels with commas for better readability.\n\nggplot(datacontent_cleaned, aes(\n  x = age_group, y = value, \n  fill = employment_status)\n) +\n  geom_col(position = \"dodge\") +\n  facet_wrap(~ time_category, scales = \"free_y\") +\n  labs(\n    title = \"Workforce by Age Group and Employment Status\",\n    x = \"Age Group\",\n    fill = \"Employment Status\"\n  ) +\n  scale_y_continuous(\n    \"Number of individuals\", \n    labels = scales::label_number(scale_cut = scales::cut_long_scale())\n  ) +\n  scale_fill_brewer(palette = \"Set2\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1)\n  )\n\n\n\n\n\n\n\n\nWhat is great about this plot is that it allows us to see the distribution of the workforce by age group and employment status across different months of the year.\nInterestingly, we found that the workforce in the 60+ age group is quite significant, with a total of 18.455.812 individuals employed in February 2025. This is a notable finding as it indicates that the aging workforce in Indonesia is still actively participating in the labor market."
  }
]